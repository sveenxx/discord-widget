{"mappings":"AAAA,qBAA4B;IACxB,OAAO,EAAE,MAAM,CAAC;IAChB,IAAI,EAAE,MAAM,CAAC;IACb,CAAC,EAAE,MAAM,CAAC;CACb,CAAC;AAEF,aAAoB;IAChB,EAAE,EAAE,MAAM,CAAC;IACX,IAAI,EAAE,MAAM,CAAC;IACb,cAAc,EAAE,MAAM,CAAC;IACvB,QAAQ,EAAE,MAAM,EAAE,CAAC;IACnB,OAAO,EAAE,MAAM,EAAE,CAAC;IAClB,cAAc,EAAE,MAAM,CAAC;CAC1B,CAAC;AKTF,oBAAoB,YAAW,CAAC,OAAO;IACnC;;OAEG;IACH,QAAQ,CAAC,OAAO,EAAE,aAAa,GAAG,SAAS,CAAC;IAE5C;;OAEG;IACH,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC;IAE9B;;OAEG;IACH,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC;gBAGlB,OAAO,EAAE,WAAW,EACpB,KAAK,EAAE,KAAK,EACZ,OAAO,CAAC,EAAE,aAAa,GAAG,SAAS;CA2B1C;AC3CD,kCAAmC,SAAQ,MAAM;IAC7C,MAAM,CAAC,OAAO,EAAE,MAAM,CAAkB;IAExC;;;;;;;OAOG;WACU,IAAI,CACb,OAAO,EAAE,WAAW,GAAG,IAAI,EAC3B,OAAO,EAAE,MAAM,EACf,OAAO,CAAC,EAAE,aAAa,GACxB,OAAO,CAAC,MAAM,CAAC;CAiBrB","sources":["src/src/interfaces/widget.ts","src/src/interfaces/index.ts","src/src/utils/fetchData.ts","src/src/utils/setStyle.ts","src/src/utils/index.ts","src/src/widget.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,"import { WidgetOptions } from \"./interfaces/\";\r\nimport { fetchData } from \"./utils\";\r\n\r\nimport { Widget } from \"./widget\";\r\n\r\nconst WIDGET_VERSION = \"1.0.0\";\r\n\r\nexport default class DiscordWidget extends Widget {\r\n    static version: string = WIDGET_VERSION;\r\n\r\n    /**\r\n     * Initializes the widget on the specified element\r\n     *\r\n     * @param element The DOM element to initialize\r\n     * @param guildId Guild identifier\r\n     * @param options [optional] Options for the widget\r\n     * @returns\r\n     */\r\n    static async init(\r\n        element: HTMLElement | null,\r\n        guildId: string,\r\n        options?: WidgetOptions\r\n    ): Promise<Widget> {\r\n        const guild = await fetchData(guildId);\r\n\r\n        if (!element || element.nodeType !== 1) {\r\n            throw new TypeError(\r\n                `exptect element to be DOM Element, but got ${element}`\r\n            );\r\n        }\r\n\r\n        if (!guild) {\r\n            throw new TypeError(\r\n                `exptect element to be Object, but got ${guild}`\r\n            );\r\n        }\r\n\r\n        return new Widget(element, guild, options);\r\n    }\r\n}\r\n\r\n// (async () => {\r\n//     const test = document.getElementById(\"discord\");\r\n//     const widget = await DiscordWidget.init(test, \"600381707073486871\");\r\n\r\n//     console.log(widget);\r\n// })();\r\n"],"names":[],"version":3,"file":"index.d.ts.map","sourceRoot":"../"}